/*
CC 2011 algos URV
*/
/*
 * File: app/model/LanguageType.js
 *
 * This file was generated by Sencha Designer version 2.0.0.
 * http://www.sencha.com/products/designer/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Designer does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Painometer.model.LanguageType', {
    extend: 'Ext.data.Model',
    config: {
        fields: [
            {
                allowNull: false,
                name: 'idLang',
                type: 'int'
            },
            {
                name: 'label',
                type: 'string'
            }
        ]
    }
});
/*
 * File: app/model/ScaleType.js
 *
 * This file was generated by Sencha Designer version 2.0.0.
 * http://www.sencha.com/products/designer/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Designer does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Painometer.model.ScaleType', {
    extend: 'Ext.data.Model',
    config: {
        fields: [
            {
                allowNull: false,
                name: 'idScale',
                type: 'int'
            },
            {
                name: 'label',
                type: 'string'
            }
        ]
    }
});
/*
 * File: app/view/InfoContainer.js
 *
 * This file was generated by Sencha Designer version 2.0.0.
 * http://www.sencha.com/products/designer/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Designer does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Painometer.view.InfoContainer', {
    extend: 'Ext.Container',
    alias: 'widget.InfoContainer',

    config: {
        bottom: '0px',
        docked: 'right',
        height: '30px',
        id: 'infoContainerID',
        right: '0px',
        style: '',
        width: '30px',
        items: [
            {
                xtype: 'button',
                id: 'infoBtn',
                style: 'border:0;',
                ui: 'info_btn-small',
                width: 22,
                iconCls: 'info',
                iconMask: true
            }
        ]
    }

});
/*
 * File: app/view/FPSRPanel.js
 *
 * This file was generated by Sencha Designer version 2.0.0.
 * http://www.sencha.com/products/designer/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Designer does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Painometer.view.FPSRPanel', {
    extend: 'Ext.form.Panel',
    alias: 'widget.fpsrpanel',
    requires: [
        'Painometer.view.InfoContainer'
    ],

    config: {
        id: 'FPSRPanel',
        style: 'background-color:white;',
        layout: {
            type: 'fit'
        },
        scrollable: false,
        items: [
            {
                xtype: 'container',
                docked: 'top',
                id: 'FPSNavContainer',
                padding: 10,
                defaults: {
                    width: 50,
                    height: 68,
                    style: 'background-position: center center; background-size: 52px;'
                },
                layout: {
                    align: 'center',
                    pack: 'center',
                    type: 'hbox'
                },
                items: [
                    {
                        xtype: 'image',
                        id: 'smallFace1',
                        src: 'resources/images/fpsr/cara1.png'
                    },
                    {
                        xtype: 'image',
                        id: 'smallFace2',
                        src: 'resources/images/fpsr/cara2.png'
                    },
                    {
                        xtype: 'image',
                        id: 'smallFace3',
                        src: 'resources/images/fpsr/cara3.png'
                    },
                    {
                        xtype: 'image',
                        id: 'smallFace4',
                        src: 'resources/images/fpsr/cara4.png'
                    },
                    {
                        xtype: 'image',
                        id: 'smallFace5',
                        src: 'resources/images/fpsr/cara5.png'
                    },
                    {
                        xtype: 'image',
                        id: 'smallFace6',
                        src: 'resources/images/fpsr/cara6.png'
                    }
                ]
            },
            {
                xtype: 'container',
                id: 'InfoCaroCont',
                defaults: {
                    style: 'background-color:white',
                    
                },
                layout: {
                    type: 'fit'
                },
                items: [
                    {
                        xtype: 'carousel',
                        id: 'FPSCarousel',
                        defaults: {
                            style: 'background-position: 50% 25%; background-size: 285px;'
                        },
                        items: [
                            {
                                xtype: 'image',
                                id: 'face_1',
                                src: 'resources/images/fpsr/cara1.png',
                                value: 0
                            },
                            {
                                xtype: 'image',
                                id: 'face_2',
                                src: 'resources/images/fpsr/cara2.png',
                                value: 20
                            },
                            {
                                xtype: 'image',
                                id: 'face_3',
                                src: 'resources/images/fpsr/cara3.png',
                                value: 40
                            },
                            {
                                xtype: 'image',
                                id: 'face_4',
                                src: 'resources/images/fpsr/cara4.png',
                                value: 60
                            },
                            {
                                xtype: 'image',
                                id: 'face_5',
                                src: 'resources/images/fpsr/cara5.png',
                                value: 80
                            },
                            {
                                xtype: 'image',
                                id: 'face_6',
                                src: 'resources/images/fpsr/cara6.png',
                                value: 100
                            }
                        ]
                    },
                    {
                        xtype: 'InfoContainer',
                        id: 'infoContainerFP'
                    }
                ]
            }
        ]
    }

});
/*
 * File: app/view/CreditsContainer.js
 *
 * This file was generated by Sencha Designer version 2.0.0.
 * http://www.sencha.com/products/designer/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Designer does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Painometer.view.CreditsContainer', {
    extend: 'Ext.Container',
    alias: 'widget.creditscontainer',

    config: {
        id: 'CreditsContainer',
        style: 'background-color:white;',
        layout: {
            type: 'fit'
        },
        items: [
            {
                xtype: 'titlebar',
                docked: 'top',
                title: 'Crèdits',
                items: [
                    {
                        xtype: 'button',
                        id: 'config',
                        ui: 'back',
                        text: 'Painometer'
                    }
                ]
            },
            {
                xtype: 'container',
                html: '',
                id: 'credits',
                style: 'background-color:white;',
                layout: {
                    type: 'fit'
                },
                items: [
                    {
                        xtype: 'container',
                        docked: 'top',
                        html: '<center><u><b>Director</b></u><br>Dr. Jordi Miró<br><br><u><b>Investigadoras</b></u><br>Rocío de la Vega<br>Elena Castarlenas<br>Elisabet Sánchez-Rodríguez<br><br><u><b>Desenvolupadors</b></u><br>Roman Roset<br>Gerard Gutiérrez<br>Pere Llorens<br><br></center>',
                        id: 'names',
                        style: 'padding-top: 5px;text-shadow: 3px 3px 5px #999999;'
                    },
                    {
                        xtype: 'container',
                        docked: 'bottom',
                        id: 'logo',
                        style: 'background-color:white; padding-bottom: 15px;',
                        layout: {
                            align: 'center',
                            pack: 'center',
                            type: 'hbox'
                        },
                        items: [
                            {
                                xtype: 'image',
                                docked: 'bottom',
                                height: 100,
                                id: 'algos',
                                style: 'background-position: 50% 0%; ',
                                src: 'resources/images/algos/logo_algos.png'
                            }
                        ]
                    }
                ]
            }
        ]
    }

});
/*
 * File: app/view/ConfigPanel.js
 *
 * This file was generated by Sencha Designer version 2.0.0.
 * http://www.sencha.com/products/designer/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Designer does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Painometer.view.ConfigPanel', {
    extend: 'Ext.form.Panel',
    alias: 'widget.configpanel',

    config: {
        id: 'ConfigPanel',
        ui: '',
        layout: {
            align: 'center',
            type: 'vbox'
        },
        scrollable: true,
        items: [
            {
                xtype: 'titlebar',
                docked: 'top',
                title: 'Painometer',
                items: [
                    {
                        xtype: 'button',
                        id: 'okConfig',
                        ui: 'confirm',
                        text: 'OK'
                    },
                    {
                        xtype: 'button',
                        id: 'creditsbtn',
                        ui: 'forward',
                        iconAlign: 'right',
                        text: 'Crèdits',
                        align: 'right'
                    }
                ]
            },
            {
                xtype: 'container',
                data: {
                    value: 100
                },
                height: 210,
                id: 'ValueCont',
                style: 'text-align: center; font-size: 135px; margin: 15px; border: 15px; border-style: groove; padding: 0px; padding-top: 5px;',
                tpl: [
                    '{value}'
                ],
                width: 260
            },
            {
                xtype: 'fieldset',
                width: '100%',
                layout: {
                    type: 'default'
                },
                instructions: 'Opcions generals de l\'eina',
                title: 'Opcions',
                items: [
                    {
                        xtype: 'selectfield',
                        height: '',
                        id: 'ScaleSel',
                        itemId: 'ScaleSel',
                        width: '',
                        label: 'Escala',
                        labelAlign: 'bottom',
                        labelWidth: '40%',
                        name: 'escalaType',
                        displayField: 'label',
                        store: 'scaleTypesStoreId',
                        valueField: 'idScale'
                    },
                    {
                        xtype: 'selectfield',
                        height: '',
                        width: '',
                        label: 'Idioma',
                        labelAlign: 'bottom',
                        labelWidth: '40%',
                        name: 'Language',
                        displayField: 'label',
                        store: 'languageStoreId',
                        valueField: 'idLang\n'
                    }
                ]
            }
        ]
    }

});
/*
 * File: app/controller/ConfigController.js
 *
 * This file was generated by Sencha Designer version 2.0.0.
 * http://www.sencha.com/products/designer/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Designer does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Painometer.controller.ConfigController', {
    extend: 'Ext.app.Controller',

    config: {
        models: [
            'Config'
        ],
        stores: [
            
        ],
        views: [
            'ConfigPanel'
        ],
        refs: {
            okConfig: '#okConfig',
            ValueCont: '#ValueCont',
            mainContainer: '#MainContainer',
            scaleSel: '#ScaleSel',
            infoBtn: '#infoBtn',
            creditsbtn: '#creditsbtn',
            configCard: '#ConfigCard'
        },

        control: {
            "okConfig": {
                tap: 'onConfigTap'
            },
            "infoBtn": {
                tap: 'oninfoButtonTap'
            },
            "creditsbtn": {
                tap: 'creditsbtnTap'
            },
            "configCard": {
                activate: 'onconfigCardActivate'
            }
        }
    },

    init: function() {

        var configModel = Ext.ModelMgr.getModel('Painometer.model.Config');

        var configDefault = Ext.create('Painometer.model.Config', {
            id       : 1,
            scale    : 0,
            language : 0,
            value    : 0
        });

        this.configInstance = configDefault;

        configModel.load(1, {
            scope: this,
            failure: function(record) {
                this.configInstance.save();
            }, 
            success: function (record) {
                this.configInstance.set("value", record.get("value"));
                this.configInstance.set("language", record.get("language"));
                this.configInstance.set("scale", record.get("scale"));
            }
        });

    },

    onConfigTap: function(button, e, options) {
        var me = this;
        var scale = me.getScaleSel().getValue();
        me.getMainContainer().setActiveItem(scale);
    },

    oninfoButtonTap: function(button, e, options) {
        this.configInstance.save();
        this.getMainContainer().setActiveItem(4);
    },

    creditsbtnTap: function(button, e, options) {
        var me = this;
        var card = me.getConfigCard();
        var layout = card.getLayout();
        var inn = layout.getAnimation().getInAnimation();
        var out = layout.getAnimation().getOutAnimation();

        inn.setDirection("left");
        out.setDirection("left");
        card.setActiveItem(1);
    },

    onconfigCardActivate: function(container, newActiveItem, oldActiveItem, options) {
        var newValue = this.configInstance.get('value');

        this.getValueCont().setData({'value' : newValue});
    },

    getValue: function() {
        return this.configInstance.get('value');

    },

    setValue: function(newValue) {
        this.configInstance.set('value', newValue);
    }

});
/*
 * File: app/view/ConfigCard.js
 *
 * This file was generated by Sencha Designer version 2.0.0.
 * http://www.sencha.com/products/designer/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Designer does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Painometer.view.ConfigCard', {
    extend: 'Ext.Container',
    alias: 'widget.configCard',
    requires: [
        'Painometer.view.ConfigPanel',
        'Painometer.view.CreditsContainer'
    ],

    config: {
        layout: {
            animation: 'slide',
            type: 'card'
        },
        items: [
            {
                xtype: 'configpanel',
                id: 'configPanel'
            },
            {
                xtype: 'creditscontainer',
                id: 'Creditscontainer'
            }
        ]
    }

});
/*
 * File: app/view/VASPanel.js
 *
 * This file was generated by Sencha Designer version 2.0.0.
 * http://www.sencha.com/products/designer/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Designer does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Painometer.view.VASPanel', {
    extend: 'Ext.Container',
    alias: 'widget.VASPanel',
    requires: [
        'Painometer.view.InfoContainer'
    ],

    config: {
        id: 'VASPanel',
        style: 'background-color:white;',
        layout: {
            type: 'fit'
        },
        items: [
            {
                xtype: 'container',
                id: 'VASSliderCont',
                style: 'background-color:white;',
                layout: {
                    type: 'fit'
                },
                items: [
                    {
                        xtype: 'sliderfield',
                        centered: true,
                        cls: 'sencha-vas-slider',
                        id: 'VASSlider'
                    }
                ]
            },
            {
                xtype: 'InfoContainer',
                id: 'VASInfoCont'
            }
        ]
    }

});
/*
 * File: app/controller/FPSRPanel.js
 *
 * This file was generated by Sencha Designer version 2.0.0.
 * http://www.sencha.com/products/designer/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Designer does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Painometer.controller.FPSRPanel', {
    extend: 'Ext.app.Controller',

    config: {
        stores: [
            
        ],
        views: [
            'FPSRPanel'
        ],
        refs: {
            faceContainer: '#FPSCarousel image',
            fpsNav: '#FPSNavContainer',
            mainContainer: '#MainContainer',
            FPSCarousel: '#FPSCarousel'
        },

        control: {
            "faceContainer": {
                activate: 'faceActivate'
            },
            "fpsrpanel": {
                activate: 'onFPSRPanelActivate'
            }
        }
    },

    faceActivate: function(container, newActiveItem, oldActiveItem, options) {
        if (!Ext.isEmpty(container)) {
            var newIndex = container.config.value / 20;
            var newFace    = this.getFpsNav().items.getAt(newIndex);

            newFace.addCls("face-selected");
        }

        if (!Ext.isEmpty(oldActiveItem)) {
            var oldIndex = oldActiveItem.config.value / 20;
            var oldFace = this.getFpsNav().items.getAt(oldIndex);

            oldFace.removeCls("face-selected");

            var configController = this.getApplication().getController("Painometer.controller.ConfigController");
            configController.setValue(container.config.value);
        }
    },

    onFPSRPanelActivate: function(container, newActiveItem, oldActiveItem, options) {
        var configController = this.getApplication().getController("Painometer.controller.ConfigController");
        var value = configController.getValue();
        var pan = this.getFPSCarousel();
        var index = Math.floor(value / 20);

        pan.setActiveItem(index);
    }

});
/*
 * File: app/store/ScaleTypes.js
 *
 * This file was generated by Sencha Designer version 2.0.0.
 * http://www.sencha.com/products/designer/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Designer does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Painometer.store.ScaleTypes', {
    extend: 'Ext.data.Store',
    requires: [
        'Painometer.model.ScaleType'
    ],

    config: {
        autoLoad: true,
        data: [
            {
                idScale: 0,
                label: 'FPS-R'
            },
            {
                idScale: 1,
                label: 'NRS-11'
            },
            {
                idScale: 2,
                label: 'CAS'
            },
            {
                idScale: 3,
                label: 'VAS'
            }
        ],
        model: 'Painometer.model.ScaleType',
        storeId: 'scaleTypesStoreId'
    }
});
/*
 * File: app/controller/CreditsContainer.js
 *
 * This file was generated by Sencha Designer version 2.0.0.
 * http://www.sencha.com/products/designer/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Designer does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Painometer.controller.CreditsContainer', {
    extend: 'Ext.app.Controller',

    config: {
        refs: {
            config: '#config',
            configCard: '#ConfigCard'
        },

        control: {
            "config": {
                tap: 'configTap'
            }
        }
    },

    configTap: function(button, e, options) {
        var me = this;
        var card = me.getConfigCard();
        var layout = card.getLayout();
        var inn = layout.getAnimation().getInAnimation();
        var out = layout.getAnimation().getOutAnimation();

        inn.setDirection("right");
        out.setDirection("right");
        card.setActiveItem(0);
    }

});
/*
 * File: app/store/LanguageTypes.js
 *
 * This file was generated by Sencha Designer version 2.0.0.
 * http://www.sencha.com/products/designer/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Designer does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Painometer.store.LanguageTypes', {
    extend: 'Ext.data.Store',
    requires: [
        'Painometer.model.LanguageType'
    ],

    config: {
        autoLoad: true,
        data: [
            {
                idLang: 0,
                label: 'Català'
            },
            {
                idLang: 1,
                label: 'Español'
            }
        ],
        model: 'Painometer.model.LanguageType',
        storeId: 'languageStoreId'
    }
});
/*
 * File: app/controller/NRS11Panel.js
 *
 * This file was generated by Sencha Designer version 2.0.0.
 * http://www.sencha.com/products/designer/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Designer does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Painometer.controller.NRS11Panel', {
    extend: 'Ext.app.Controller',

    config: {
        stores: [
            
        ],
        views: [
            'NRS11Panel'
        ],
        refs: {
            numContainer: '#NRSCarousel container',
            nrsNav: '#NRSNavContainer',
            mainContainer: '#MainContainer',
            NRS11Panel: '#Nrs11Panel',
            NRSCarousel: '#NRSCarousel'
        },

        control: {
            "numContainer": {
                activate: 'numActivate'
            },
            "NRS11Panel": {
                activate: 'onNRS11PanelActivate'
            }
        }
    },

    numActivate: function(container, newActiveItem, oldActiveItem, options) {
        if (!Ext.isEmpty(container)) {
            var newIndex = container.config.value / 10;
            var newFace    = this.getNrsNav().items.getAt(newIndex);

            newFace.addCls("face-selected");
        }

        if (!Ext.isEmpty(oldActiveItem)) {
            var oldIndex = oldActiveItem.config.value / 10;
            var oldFace = this.getNrsNav().items.getAt(oldIndex);

            oldFace.removeCls("face-selected");
            var configController = this.getApplication().getController("Painometer.controller.ConfigController");
            configController.setValue(container.config.value);
        }
    },

    onNRS11PanelActivate: function(container, newActiveItem, oldActiveItem, options) {
        var configController = this.getApplication().getController("Painometer.controller.ConfigController");
        var value = configController.getValue();
        var pan = this.getNRSCarousel();
        var index = Math.floor(value / 10);

        pan.setActiveItem(index);
    }

});
/*
 * File: app/model/Config.js
 *
 * This file was generated by Sencha Designer version 2.0.0.
 * http://www.sencha.com/products/designer/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Designer does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Painometer.model.Config', {
    extend: 'Ext.data.Model',
    config: {
        fields: [
            {
                allowNull: false,
                name: 'scale',
                type: 'int'
            },
            {
                allowNull: false,
                name: 'language',
                type: 'int'
            },
            {
                defaultValue: 0,
                name: 'value',
                type: 'int'
            }
        ],
        proxy: {
            type: 'localstorage',
            id: 'painometerProxy'
        }
    }
});
/*
 * File: app/view/NRS11Panel.js
 *
 * This file was generated by Sencha Designer version 2.0.0.
 * http://www.sencha.com/products/designer/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Designer does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Painometer.view.NRS11Panel', {
    extend: 'Ext.form.Panel',
    alias: 'widget.nrs11panel',
    requires: [
        'Painometer.view.InfoContainer'
    ],

    config: {
        html: '',
        id: 'NRS11Panel',
        style: 'background-color:white;',
        layout: {
            type: 'fit'
        },
        scrollable: false,
        items: [
            {
                xtype: 'container',
                docked: 'top',
                id: 'NRSNavContainer',
                style: 'padding-bottom: 5px;',
                defaults: {
                    width: 29,
                    height: 25,
                    style: 'padding-bottom: 4px; margin-top: 15px; text-align: center; background-position: center center; '
                },
                layout: {
                    pack: 'center',
                    type: 'hbox'
                },
                items: [
                    {
                        xtype: 'container',
                        html: 0,
                        id: 'smallNRS0'
                    },
                    {
                        xtype: 'container',
                        html: 1,
                        id: 'smallNRS1'
                    },
                    {
                        xtype: 'container',
                        html: 2,
                        id: 'smallNRS2'
                    },
                    {
                        xtype: 'container',
                        html: 3,
                        id: 'smallNRS3'
                    },
                    {
                        xtype: 'container',
                        html: 4,
                        id: 'smallNRS4'
                    },
                    {
                        xtype: 'container',
                        html: 5,
                        id: 'smallNRS5'
                    },
                    {
                        xtype: 'container',
                        html: 6,
                        id: 'smallNRS6'
                    },
                    {
                        xtype: 'container',
                        html: 7,
                        id: 'smallNRS7'
                    },
                    {
                        xtype: 'container',
                        html: 8,
                        id: 'smallNRS8'
                    },
                    {
                        xtype: 'container',
                        html: 9,
                        id: 'smallNRS9'
                    },
                    {
                        xtype: 'container',
                        html: 10,
                        id: 'smallNRS10'
                    }
                ]
            },
            {
                xtype: 'container',
                id: 'InfoCaroCont2',
                style: 'background-color:white;',
                ui: '',
                defaults: {
                    style: 'background-color:white',
                    
                },
                layout: {
                    type: 'fit'
                },
                items: [
                    {
                        xtype: 'carousel',
                        id: 'NRSCarousel',
                        style: 'background-color:white;',
                        defaults: {
                            style: 'width: 100%;height: 200px; position: absolute; top: 50%; margin-top: -140px; font-size: 240px; text-align: center; text-shadow:3px 3px 6px #707070;'
                        },
                        items: [
                            {
                                xtype: 'container',
                                html: 0,
                                id: 'NRS0',
                                value: 0
                            },
                            {
                                xtype: 'container',
                                html: 1,
                                id: 'NRS1',
                                value: 10
                            },
                            {
                                xtype: 'container',
                                html: 2,
                                id: 'NRS2',
                                value: 20
                            },
                            {
                                xtype: 'container',
                                html: 3,
                                id: 'NRS3',
                                value: 30
                            },
                            {
                                xtype: 'container',
                                html: 4,
                                id: 'NRS4',
                                value: 40
                            },
                            {
                                xtype: 'container',
                                html: 5,
                                id: 'NRS5',
                                value: 50
                            },
                            {
                                xtype: 'container',
                                html: 6,
                                id: 'NRS6',
                                value: 60
                            },
                            {
                                xtype: 'container',
                                html: 7,
                                id: 'NRS7',
                                value: 70
                            },
                            {
                                xtype: 'container',
                                html: 8,
                                id: 'NRS8',
                                value: 80
                            },
                            {
                                xtype: 'container',
                                html: 9,
                                id: 'NRS9',
                                value: 90
                            },
                            {
                                xtype: 'container',
                                html: 10,
                                id: 'NRS10',
                                style: 'width: 100%; height: 200px; position: absolute; top: 50%; margin-top: -135px; text-shadow: 10px 10px 7px lightgrey; padding-left: 50px; font-size: 220px; padding-top: 10px;',
                                value: 100
                            }
                        ]
                    },
                    {
                        xtype: 'InfoContainer',
                        id: 'infoContainer'
                    }
                ]
            }
        ]
    }

});
/*
 * File: app/view/CASPanel.js
 *
 * This file was generated by Sencha Designer version 2.0.0.
 * http://www.sencha.com/products/designer/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Designer does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Painometer.view.CASPanel', {
    extend: 'Ext.Container',
    alias: 'widget.CASPanel',
    requires: [
        'Painometer.view.InfoContainer'
    ],

    config: {
        id: 'CASPanel',
        style: 'background-color:white;',
        layout: {
            type: 'fit'
        },
        items: [
            {
                xtype: 'container',
                id: 'CASSliderCont',
                style: 'background-color:white;',
                layout: {
                    type: 'fit'
                },
                items: [
                    {
                        xtype: 'sliderfield',
                        centered: true,
                        cls: 'sencha-cas-slider',
                        id: 'CASSlider'
                    }
                ]
            },
            {
                xtype: 'InfoContainer',
                id: 'CASInfoCont'
            }
        ]
    }

});
/*
 * File: app/view/MainContainer.js
 *
 * This file was generated by Sencha Designer version 2.0.0.
 * http://www.sencha.com/products/designer/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Designer does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Painometer.view.MainContainer', {
    extend: 'Ext.Container',
    requires: [
        'Painometer.view.FPSRPanel',
        'Painometer.view.NRS11Panel',
        'Painometer.view.CASPanel',
        'Painometer.view.VASPanel',
        'Painometer.view.ConfigCard'
    ],

    config: {
        id: 'MainContainer',
        style: 'background-color:white;',
        ui: '',
        layout: {
            animation: 'cube',
            type: 'card'
        },
        defaults: {
            style: 'background-color:white;',
            
        },
        items: [
            {
                xtype: 'fpsrpanel',
                id: 'FpsrPanel'
            },
            {
                xtype: 'nrs11panel',
                id: 'Nrs11Panel'
            },
            {
                xtype: 'CASPanel',
                id: 'casPanelIt'
            },
            {
                xtype: 'VASPanel',
                id: 'VasPanelIt'
            },
            {
                xtype: 'configCard',
                id: 'ConfigCard'
            }
        ]
    }

});


