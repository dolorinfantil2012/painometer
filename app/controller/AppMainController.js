/*
 * File: app/controller/AppMainController.js
 *
 * This file was generated by Sencha Designer version 2.0.0.
 * http://www.sencha.com/products/designer/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Designer does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Painometer.controller.AppMainController', {
    extend: 'Ext.app.Controller',

    config: {
    	configController : null,  
        orientation      : true,
        
        refs: {
            MainContainer : '#MainContainer'
        }
    },

    init: function() {
    	var app = this.getApplication();
    	
    	this.setConfigController(app.getController("Painometer.controller.ConfigController"));
    	
        this.orientationWarning = Ext.Viewport.add({
            xtype: 'OrientationInfo'
        });

        Ext.Viewport.on({
            scope: this,
            orientationchange: function(viewport, newOrientation, width, height) {
               	var scale = this.getConfigController().getScale();
                var mainContainer = this.getMainContainer();
                var activePage = mainContainer.getActiveItem();

                if ((newOrientation == "portrait") && (scale == 2)) {
                    this.orientationWarning.hide();
                }
                
                if ((newOrientation == "landscape") && (scale == 2)) {
                    this.orientationWarning.showBy(activePage);
                }
                
                if ((newOrientation == "portrait") && (scale == 3)) {
                    this.orientationWarning.hide();
                }
                
                if ((newOrientation == "landscape") && (scale == 3)) {
                    this.orientationWarning.showBy(activePage);
                }
                
                if ((newOrientation == "portrait") && (scale == 0)) {
                    this.orientationWarning.hide();
                }
                 
                if ((newOrientation == "landscape") && (scale === 0)) {
                    this.orientationWarning.showBy(activePage);
                }
                
                this.setOrientation(newOrientation == "landscape");
            }
        });
    },

    isLandscape: function() {
        return this.getOrientation();

    },

    isPortrait: function() {
        return !this.getOrientation();
    }

});