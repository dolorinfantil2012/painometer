e/*
 * File: app/controller/ConfigController.js
 *
 * This file was generated by Sencha Designer version 2.0.0.
 * http://www.sencha.com/products/designer/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Designer does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Painometer.controller.ConfigController', {
    extend: 'Ext.app.Controller',

    config: {
        models: [ 'Config'],
        views : ['ConfigPanel'],
        refs  : {
            okConfig      : '#okConfig',
            valueCont     : '#ValueCont',
            mainContainer : '#MainContainer',
            infoBtn       : '#infoBtn',
            creditsbtn    : '#creditsbtn',
            view          : '#configPanel',
            field         : "#configPanel field",
            configCard    : "#ConfigCard"
        },
        control: {
            creditsbtn : { tap: 'creditsbtnTap' },
           	infoBtn    : { tap: 'oninfoButtonTap'},
           	okConfig   : { tap: 'onOKTap'},
            // form
            field      : { change : 'onChange'},
        } ,
        // user variables
        scaleTypes     : null  // instance to the scale stores
    }, 
    
    init: function() {
    	var store = Ext.data.StoreManager.lookup('scaleTypesStoreId');
        this.setScaleTypes(store);
    },

	// function that listen the ok tap to go back to show the scale
    onOKTap: function() {
        if (this.getApplication().isReset()) {
            this.getApplication().setValue(0);
        };
        this.getApplication().setViewIndex(this.getApplication().getScale());
      	this.getApplication().showView();
    },
 
    oninfoButtonTap: function(button, e, options) {
    	var data     = this.getApplication().getPainometerData();
    	var newValue = data.get('value');
        var record   = this.getScaleTypes().findRecord("idScale", this.getApplication().getScale());
        var factor   = record.get('ratio');
    	var view     = this.getView();
    	
    	view.setRecord(data);
        this.getValueCont().setData({'value' : newValue * factor});
        
        this.getApplication().setViewIndex(4);
        this.getMainContainer().setActiveItem(4);
    },

    creditsbtnTap: function(button, e, options) {
        var card   = this.getConfigCard();
        var layout = card.getLayout();
        var inn = layout.getAnimation().getInAnimation();
        var out = layout.getAnimation().getOutAnimation();

        inn.setDirection("left");
        out.setDirection("left");
        card.setActiveItem(1);
    },

    
    /*********************************************************/
    /* listeners of the form                                 */
    /*********************************************************/
  
    onChange: function(field, newValue, oldValue) {
    	var oldScale = this.getApplication().getScale();
    	
    	if (field.getName() === "scale") {
    		var newScale = field.getRecord().get("idScale");
    		if (newScale != oldScale) {
 	   			this.getApplication().setScale(newScale);
 	   			this.getApplication().setValue(0);
 	   		}
    	} else if (field.getName() === "reset") {
    		this.getApplication().setReset(oldValue);
    	}
    }
    
});