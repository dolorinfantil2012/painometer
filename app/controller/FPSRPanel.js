/*
 * File: app/controller/FPSRPanel.js
 *
 * This file was generated by Sencha Designer version 2.0.0.
 * http://www.sencha.com/products/designer/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Designer does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Painometer.controller.FPSRPanel', {
    extend: 'Ext.app.Controller',

    config: {
        models: ['Config'],
        views: ['FPSRPanel'],
        refs: {
            faceContainer : '#FPSCarousel image',
            fpsNav        : '#FPSNavContainer',
            FPSCarousel   : '#FPSCarousel'
        },
        control: {
            "faceContainer": { activate: 'faceActivate'},
            "fpsrpanel"    : {activate: 'onFPSRPanelActivate'}
        },
        // user variables
        configController  : null,
    },
    
	init: function() {
    	var app = this.getApplication();
    	this.setConfigController(app.getController("Painometer.controller.ConfigController"));
	}, 
	

    faceActivate: function(container, newActiveItem, oldActiveItem, options) {
        if (!Ext.isEmpty(container)) {
            var newIndex = container.config.value / 20;
            var newFace    = this.getFpsNav().items.getAt(newIndex);

            newFace.addCls("face-selected");
        }

        if (!Ext.isEmpty(oldActiveItem)) {
            var oldIndex = oldActiveItem.config.value / 20;
            var oldFace = this.getFpsNav().items.getAt(oldIndex);
            
            oldFace.removeCls("face-selected");
            this.getConfigController().setValue(container.config.value);
        }
    },

    onFPSRPanelActivate: function(container, newActiveItem, oldActiveItem, options) {
    	var value = this.getConfigController().getValue(),
    		pan   = this.getFPSCarousel(),
    		index = Math.floor(value / 20);
       
       	pan.setActiveItem(index);
    }

});