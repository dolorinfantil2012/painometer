/*
 * File: app/controller/FPSRPanel.js
 *
 * This file was generated by Sencha Designer version 2.0.0.
 * http://www.sencha.com/products/designer/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Designer does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * You should implement event handling and custom methods in this
 * class.
 */

Ext.define('Painometer.controller.FPSRPanel', {
    extend: 'Ext.app.Controller',

    config: {
        views: [
            'FPSRPanel'
        ],
        refs: {
            faceContainer: '#FPSCarousel image',
            fpsNav: '#FPSNavContainer',
            infoBtn: '#infoBtn',
            mainContainer: '#MainContainer'
        },

        control: {
            "faceContainer": {
                activate: 'faceActivate'
            },
            "infoBtn": {
                tap: 'onInfoButtonTap'
            }
        }
    },

    faceActivate: function(container, newActiveItem, oldActiveItem, options) {
        if (!Ext.isEmpty(oldActiveItem)) {
            var oldIndex = oldActiveItem.config.value / 2;
            var oldFace = this.getFpsNav().items.getAt(oldIndex);

            oldFace.removeCls("face-selected");
        }

        if (!Ext.isEmpty(container)) {
            var newIndex = container.config.value / 2;
            var newFace    = this.getFpsNav().items.getAt(newIndex);

            newFace.addCls("face-selected");
        }
    },

    onInfoButtonTap: function(button, e, options) {
        var me = this;
        me.getMainContainer().setActiveItem(4);
    }

});