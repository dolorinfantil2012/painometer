/*
 * File: app/controller/FPSRPanel.js
 *
 * This file was generated by Sencha Designer version 2.0.0.
 * http://www.sencha.com/products/designer/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Designer does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * You should implement event handling and custom methods in this
 * class.
 */

Ext.define('Painometer.controller.FPSRPanel', {
    extend: 'Ext.app.Controller',

    config: {
        views: [
            'FPSRPanel'
        ],
        refs: {
            faceContainer: '#FPSCarousel image',
            FPSRPanel: '#fpsrpanel',
            fpsNav: '#FPSNavContainer',
            mainContainer: '#MainContainer',
            FPSCarousel: '#FPSCarousel'
        },

        control: {
            "faceContainer": {
                activate: 'faceActivate'
            },
            "FPSRPanel": {
                activate: 'onContainerActivate'
            }
        }
    },

    faceActivate: function(container, newActiveItem, oldActiveItem, options) {
        if (!Ext.isEmpty(oldActiveItem)) {
            var oldIndex = oldActiveItem.config.value / 2;
            var oldFace = this.getFpsNav().items.getAt(oldIndex);

            oldFace.removeCls("face-selected");
        }

        if (!Ext.isEmpty(container)) {
            var newIndex = container.config.value / 2;
            var newFace    = this.getFpsNav().items.getAt(newIndex);

            newFace.addCls("face-selected");

            var configController = this.getApplication().getController("Painometer.controller.ConfigController");
            configController.setValue(container.config.value);
        }

    },

    onContainerActivate: function(container, newActiveItem, oldActiveItem, options) {
        var storeConfig = Ext.getStore("configStoreId");
        var dataStore   = storeConfig.getData();
        var configModel = dataStore.getAt(0);

        var value = configModel.get("value");

        var pan = this.getFPSCarousel();

        value = Math.floor(value / 2);
        pan.setActiveItem(value);
    }

});